#pragma checksum "C:\Users\billkoul\Downloads\trackpi\MVC\Views\Settings\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "64063b47457ccd47daf971cdb34c61e9669eac79"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Settings_Index), @"mvc.1.0.view", @"/Views/Settings/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 5 "C:\Users\billkoul\Downloads\trackpi\MVC\Views\Settings\Index.cshtml"
using MVVMEntityLayer;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"64063b47457ccd47daf971cdb34c61e9669eac79", @"/Views/Settings/Index.cshtml")]
    public class Views_Settings_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 1 "C:\Users\billkoul\Downloads\trackpi\MVC\Views\Settings\Index.cshtml"
  
    ViewData["Title"] = "Settings";
    Layout = "~/Views/_Layout.cshtml";

#line default
#line hidden
#nullable disable
            WriteLiteral(@"

<div class=""d-xl-flex justify-content-between align-items-start"">
    <h2 class=""text-dark font-weight-bold mb-2""> Device status </h2>
    <div class=""d-sm-flex justify-content-xl-between align-items-center mb-2"">
        <!--<div class=""btn-group bg-white p-3"" role=""group"" aria-label=""Basic example"">
          <button type=""button"" class=""btn btn-link text-light py-0 border-right"">7 Days</button>
          <button type=""button"" class=""btn btn-link text-dark py-0 border-right"">1 Month</button>
          <button type=""button"" class=""btn btn-link text-light py-0"">3 Month</button>
        </div>-->
    </div>
</div>
<div class=""row"">
    <div class=""col-md-12"">
        <div class=""tab-content tab-transparent-content"">
            <div class=""tab-pane fade show active"" id=""business-1"" role=""tabpanel"" aria-labelledby=""business-tab"">
                <div class=""row"">
                    <div class=""col-12 grid-margin"">
                        <div class=""card"">
                            <div ");
            WriteLiteral(@"class=""card-body"">
                                <h4 class=""card-title"">Account settings</h4>
                                <form class=""forms-sample"">
                                    <div class=""form-group"">
                                        <label for=""Username"">Username</label>
                                        <input type=""text"" name=""Username"" class=""form-control"" id=""Username"" placeholder=""Username"">
                                    </div>
                                    <div class=""form-group"">
                                        <label for=""Email"">Email</label>
                                        <input type=""email"" name=""Email"" class=""form-control"" id=""Email"" placeholder=""Email"">
                                    </div>
                                    <div class=""form-group"">
                                        <label for=""Password"">Password</label>
                                        <input type=""password"" name=""Password"" class=""form-cont");
            WriteLiteral(@"rol"" id=""Password"" placeholder=""Password"">
                                    </div>
                                    <div class=""form-group"">
                                        <label for=""PasswordConfirm"">Confirm Password</label>
                                        <input type=""password"" name=""PasswordConfirm"" class=""form-control"" id=""PasswordConfirm"" placeholder=""Confirm"">
                                    </div>
                                    <div id=""errorMsg""></div>
                                    <button id=""submit"" class=""btn btn-primary mr-2"">Update</button>
                                </form>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

");
            DefineSection("ScriptsFooter", async() => {
                WriteLiteral(@"
    <script type=""text/javascript"" src=""/js/jquery.form.min.js?v=2""></script>

    <script>
        $('#Password, #PasswordConfirm').on('keyup', function () {
            if ($('#Password').val() != $('#PasswordConfirm').val()) {
                $('#errorMsg').html('Passwords don\'t match!').css('color', 'red');
                $(':input[type=""submit""]').prop('disabled', true);
            }
            else {
                $('#errorMsg').html('');
                $(':input[type=""submit""]').prop('disabled', false);
            }
        });
    </script>
    <script type=""text/javascript"">
        $(document).ready(function () {

            $('#submit').click(function (e) {
                e.preventDefault();
                var btn = $(this);
                var form = $(this).closest('form');

                btn.addClass('').attr('disabled', true);
                show_wait();
                form.ajaxSubmit({
                    url: '/settings/save/',
                    ty");
                WriteLiteral(@"pe: 'post',
                    dataType: 'json',
                    success: function (response, status, xhr, form) {
                        btn.removeClass('T').attr('disabled', false);
                        swal.close();
                        if (response['result']) {
                            showMsg('Success', response['msg']);
                        } else {
                            showMsg('Oups!', response['msg']);
                        }
                    },
                    error: function showerror(xhr, status, err) {
                        swal.close();

                        showMsg('Oups!', 'Something went wrong.');
                        btn.removeClass('T').attr('disabled', false);
                    }
                });
            });
        });
    </script>
");
            }
            );
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
